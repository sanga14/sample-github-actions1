name: terraform2

on:
  pull_request:
    branches:
      - main

      env:
      AWS_REGION: "us-east-1"
      tf_actions_working_dir: ./terraform

jobs:
    creating-terraform-plan:
        runs-on: ubuntu latest
        defaults:
            run:
             working-directory: ${{ env.tf_actions_working_dir }}
        permissions:
            id-token: write 
            contents: read 
            pull-requests: write
            
        steps:
             - name: Git clone the repository
             - uses: actions/checkout@v4
             - with:
               role-to-assume: arn:aws:iam::376651374569:role/sample-githubaction-role
               role-session-name: sample-githubaction-role
               aws-region: ${{ env.AWS_REGION }}

            - name: Terraform setup
            - uses: hashicorp/setup-terraform@v3
              id: fmt
              run: terraform fmt -check
              continue-on-error: true

            - name: Terraform Init
              id: init
              run: terraform init

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color
            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color
              continue-on-error: true

            - uses: actions/github-script@v7
              if: github.event_name == 'pull_request'
              env:
                   PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
                  with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                    const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                    #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                    #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
                    <details><summary>Validation Output</summary>

                    \`\`\`\n
                    ${{ steps.validate.outputs.stdout }}
                    \`\`\`

                    </details>

                    #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

                    <details><summary>Show Plan</summary>

                    \`\`\`\n
                    ${process.env.PLAN}
                    \`\`\`

                   </details>

                   *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

                   github.rest.issues.createComment({
                   issue_number: context.issue.number,
                   owner: context.repo.owner,
                   repo: context.repo.repo,
                   body: output
                   })